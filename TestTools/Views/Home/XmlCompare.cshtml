@model TestTools.Models.XmlCompareViewModel
@{
    ViewData["Title"] = "XML Comparison Tool";
}

<link rel="stylesheet" href="~/css/site.css" />

<div class="container-fluid p-0">
    <div class="row">
        <div class="col-12">
            <div class="card w-100 my-4">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0 text-center"><i class="fas fa-code-compare"></i> XML Diff Tool</h2>
                </div>
                <div class="card-body mb-4">
                    <p class="mb-3 text-center">Compare two XML files to identify differences in structure and content. Upload your XML files and review the comparison results below.</p>
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0 text-center"><i class="fas fa-upload"></i> Upload XML Files</h5>
                </div>
                <form asp-action="XmlCompare" method="post" enctype="multipart/form-data" class="mb-4">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="ComparisonPerformed" name="ComparisonPerformed" value="@Model.ComparisonPerformed.ToString().ToLower()" />
                        <input type="hidden" id="MergePerformed" name="MergePerformed" value="@Model.MergePerformed.ToString().ToLower()" />
                        @if (!string.IsNullOrEmpty(Model.FirstXmlContent)) {
                            <input type="hidden" name="FirstXmlContent" value="@Html.Raw(Uri.EscapeDataString(Model.FirstXmlContent))" />
                        }
                        @if (!string.IsNullOrEmpty(Model.SecondXmlContent)) {
                            <input type="hidden" name="SecondXmlContent" value="@Html.Raw(Uri.EscapeDataString(Model.SecondXmlContent))" />
                        }
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="FirstXmlFile" class="control-label">First XML File</label>
                                    <input asp-for="FirstXmlFile" type="file" accept=".xml" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="SecondXmlFile" class="control-label">Second XML File</label>
                                    <input asp-for="SecondXmlFile" type="file" accept=".xml" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="d-grid gap-2 my-4">
                            <button id="compareBtn" type="submit" class="btn btn-primary flex-fill" name="action" value="compare"><i class="fas fa-play"></i> Compare XML Files</button>
                            <button id="mergeBtn" type="submit" class="btn btn-primary flex-fill" name="action" value="merge"><i class="fas fa-exchange-alt"></i> Merge Documents</button>
                            @* <button type="submit" class="btn btn-primary flex-fill" name="action" value="clear"><i class="fas fa-eraser"></i> Clear Comparison</button> *@
                        </div>
                    </form>
                    @if (Model.MergePerformed && !string.IsNullOrEmpty(Model.MergedXmlContent))
                    {
                        <div class="merge-results">
                            <h2 class="mb-3">Merged XML Document</h2>
                            <div class="row">
                                <div class="col-12">
                                    <div class="card my-4">
                                        <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                                            <h5 class="mb-0">Merged XML Document</h5>
                                        </div>
                                        <div class="card-body">
                                            <iframe id="mergedXmlFrame" style="width:100%; height:600px; border:1px solid #ddd;"></iframe>
                                        </div>
                                    </div>
                                    <div class="card mb-4">
                                        <div class="card-header bg-primary text-white text-center py-3">
                                            <h5 class="mb-0 text-center"><i class="fas fa-tools"></i> Actions</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="d-grid gap-2">
                                                <button id="downloadMergedXml" class="btn btn-primary flex-fill" type="button"><i class="fas fa-download"></i> Download XML</button>
                                                <form asp-action="XmlCompare" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-primary w-100 flex-fill" name="action" value="clear"><i class="fas fa-eraser"></i> Clear Comparison</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="mergedXmlContent" value="@Html.Raw(Uri.EscapeDataString(Model.MergedXmlContent))" />
                    }
                    @if (Model.ComparisonPerformed && Model.Differences != null)
                    {
                        <div class="comparison-results">
                            <h2 class="mb-3">Comparison Results</h2>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card my-4">
                                        <div class="card-header bg-primary text-white">
                                            <h5 class="mb-0">First XML Document</h5>
                                        </div>
                                        <div class="card-body">
                                            <iframe id="firstXmlFrame" class="xml-frame" style="width:100%; height:400px; border:1px solid #ddd;"></iframe>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card my-4">
                                        <div class="card-header bg-primary text-white">
                                            <h5 class="mb-0">Second XML Document</h5>
                                        </div>
                                        <div class="card-body">
                                            <iframe id="secondXmlFrame" class="xml-frame" style="width:100%; height:400px; border:1px solid #ddd;"></iframe>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-4">
                                <div class="col-12">
                                    <div class="card my-4">
                                        <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                                            <h5 class="mb-0">Differences Summary</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table table-striped table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>Path</th>
                                                            <th>Type</th>
                                                            <th>First Value</th>
                                                            <th>Second Value</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var diff in Model.Differences)
                                                        {
                                                            <tr>
                                                                <td>@diff.Path</td>
                                                                <td>@diff.Type</td>
                                                                <td class="diff-value-1">
                                                                    @if (diff.FirstValue != null && diff.FirstValue.Length > 100)
                                                                    {
                                                                        <span title="@diff.FirstValue">@diff.FirstValue.Substring(0, 100)...</span>
                                                                    }
                                                                    else
                                                                    {
                                                                        @diff.FirstValue
                                                                    }
                                                                </td>
                                                                <td class="diff-value-2">
                                                                    @if (diff.SecondValue != null && diff.SecondValue.Length > 100)
                                                                    {
                                                                        <span title="@diff.SecondValue">@diff.SecondValue.Substring(0, 100)...</span>
                                                                    }
                                                                    else
                                                                    {
                                                                        @diff.SecondValue
                                                                    }
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card my-4">
                                        <div class="card-header bg-primary text-white text-center py-3">
                                            <h5 class="mb-0 text-center"><i class="fas fa-tools"></i> Actions</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="d-grid gap-2">
                                                <button id="downloadDiffSummary" class="btn btn-primary flex-fill" type="button"><i class="fas fa-file-csv"></i> Download Summary</button>
                                                <form asp-action="XmlCompare" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-primary w-100 flex-fill" name="action" value="clear"><i class="fas fa-eraser"></i> Clear Comparison</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="firstXmlContent" value="@Html.Raw(Uri.EscapeDataString(Model.FirstXmlContent ?? string.Empty))" />
                        <input type="hidden" id="secondXmlContent" value="@Html.Raw(Uri.EscapeDataString(Model.SecondXmlContent ?? string.Empty))" />
                        <input type="hidden" id="differencesJson" value="@Html.Raw(Uri.EscapeDataString(System.Text.Json.JsonSerializer.Serialize(Model.Differences)))" />
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // UI logic for Compare/Merge interaction
            var comparisonPerformed = ($('#ComparisonPerformed').val() === 'true');
            var mergePerformed = ($('#MergePerformed').val() === 'true');
            if (mergePerformed && !comparisonPerformed) {
                // Merge clicked first: disable Compare, hide comparison
                $('#compareBtn').prop('disabled', true);
                $('.comparison-results').hide();
            } else if (comparisonPerformed && !mergePerformed) {
                // Compare clicked: both enabled, show comparison only
                $('#compareBtn').prop('disabled', false);
                $('#mergeBtn').prop('disabled', false);
                $('.merge-results').hide();
            } else if (comparisonPerformed && mergePerformed) {
                // Compare then Merge: show both
                $('#compareBtn').prop('disabled', false);
                $('#mergeBtn').prop('disabled', false);
                $('.comparison-results').show();
                $('.merge-results').show();
            } else {
                // Initial state: both enabled
                $('#compareBtn').prop('disabled', false);
                $('#mergeBtn').prop('disabled', false);
            }

            // Existing XML iframe logic...

            function loadXmlContent(frameId, xmlContent, isFirstFile) {
                if (!xmlContent) return;
                var differencesJson = "[]";
                var differencesElement = document.getElementById('differencesJson');
                if (differencesElement) {
                    differencesJson = decodeURIComponent(differencesElement.value);
                }
                fetch('/Home/GetHighlightedXml?isFirstFile=' + isFirstFile, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: 'xmlContent=' + encodeURIComponent(xmlContent) + '&differencesJson=' + encodeURIComponent(differencesJson)
                })
                .then(response => response.text())
                .then(html => {
                    var iframe = document.getElementById(frameId);
                    if (iframe) {
                        setTimeout(function() {
                            var blob = new Blob([html], { type: 'text/html' });
                            var url = URL.createObjectURL(blob);
                            iframe.src = url;
                        }, 100);
                    }
                })
                .catch(error => {
                    console.error('Error loading XML:', error);
                });
            }
            if (document.getElementById('firstXmlContent') && document.getElementById('secondXmlContent')) {
                try {
                    var firstXmlContent = decodeURIComponent(document.getElementById('firstXmlContent').value);
                    var secondXmlContent = decodeURIComponent(document.getElementById('secondXmlContent').value);
                    loadXmlContent('firstXmlFrame', firstXmlContent, true);
                    loadXmlContent('secondXmlFrame', secondXmlContent, false);
                } catch (error) {
                    console.error('Error in comparison:', error);
                }
            }
            if (document.getElementById('mergedXmlContent')) {
    try {
        var mergedContent = decodeURIComponent(document.getElementById('mergedXmlContent').value);
        $('#downloadMergedXml').off('click').on('click', function () {
            // Client-side download
            var blob = new Blob([mergedContent], { type: 'text/xml' });
            var url = URL.createObjectURL(blob);
            var a = document.createElement('a');
            a.href = url;
            a.download = 'merged_document.xml';
            document.body.appendChild(a);
            a.click();
            setTimeout(function () {
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
            }, 100);
        });
        loadXmlContent('mergedXmlFrame', mergedContent, true);
    } catch (error) {
        console.error('Error in merged XML:', error);
    }
}

// Download Differences Summary as CSV
$('#downloadDiffSummary').off('click').on('click', function () {
    var table = $('.comparison-results table.table');
    if (!table.length) {
        alert('No Differences Summary table found to download.');
        return;
    }
    var csv = [];
    table.find('thead tr').each(function () {
        var row = [];
        $(this).find('th').each(function () {
            row.push('"' + $(this).text().replace(/"/g, '""') + '"');
        });
        csv.push(row.join(','));
    });
    table.find('tbody tr').each(function () {
        var row = [];
        $(this).find('td').each(function () {
            row.push('"' + $(this).text().replace(/"/g, '""') + '"');
        });
        csv.push(row.join(','));
    });
    var csvContent = csv.join('\r\n');
    var blob = new Blob([csvContent], { type: 'text/csv' });
    var url = URL.createObjectURL(blob);
    var a = document.createElement('a');
    a.href = url;
    a.download = 'Differences_Summary.csv';
    document.body.appendChild(a);
    a.click();
    setTimeout(function () {
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    }, 100);
});
        });
    </script>
}
